# compose-kafka.yml

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.2
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    healthcheck:
      # Sử dụng công cụ healthcheck có sẵn trong image, không phụ thuộc vào `nc`
      test: ["CMD-SHELL", "cub zookeeper-ready zookeeper 2181 30"]
      interval: 10s
      timeout: 10s
      retries: 3
    networks:
      - services-net

  kafka1:
    image: confluentinc/cp-kafka:7.3.2
    hostname: kafka1
    container_name: kafka1
    ports:
      - "9091:9091"
    depends_on:
      zookeeper:
        # Yêu cầu zookeeper phải "healthy" thì kafka broker mới khởi động
        condition: service_healthy
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:29091,PLAINTEXT_HOST://localhost:9091
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3 # Cấu hình quan trọng cho cluster 3 node
    healthcheck:
      # Sử dụng công cụ healthcheck có sẵn của Confluent
      test: ["CMD-SHELL", "cub kafka-ready -b localhost:29091 1 30"]
      interval: 15s
      timeout: 10s
      retries: 5
    volumes:
      - kafka1_data:/var/lib/kafka/data
    networks:
      - services-net

  kafka2:
    image: confluentinc/cp-kafka:7.3.2
    hostname: kafka2
    container_name: kafka2
    ports:
      - "9092:9092"
    depends_on:
      zookeeper:
        condition: service_healthy
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka2:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REplication_FACTOR: 3
    healthcheck:
      test: ["CMD-SHELL", "cub kafka-ready -b localhost:29092 1 30"]
      interval: 15s
      timeout: 10s
      retries: 5
    volumes:
      - kafka2_data:/var/lib/kafka/data
    networks:
      - services-net

  kafka3:
    image: confluentinc/cp-kafka:7.3.2
    hostname: kafka3
    container_name: kafka3
    ports:
      - "9093:9093"
    depends_on:
      zookeeper:
        condition: service_healthy
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka3:29093,PLAINTEXT_HOST://localhost:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
    healthcheck:
      test: ["CMD-SHELL", "cub kafka-ready -b localhost:29093 1 30"]
      interval: 15s
      timeout: 10s
      retries: 5
    volumes:
      - kafka3_data:/var/lib/kafka/data
    networks:
      - services-net

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - "8080:8080"
    depends_on: # Đảm bảo UI chỉ khởi động khi các broker đã sẵn sàng
      - kafka1
      - kafka2
      - kafka3
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka1:29091,kafka2:29092,kafka3:29093
    networks:
      - services-net