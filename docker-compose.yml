services:
  redis:
    container_name: redis
    image: redis:latest
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - ./data/redis:/root/redis
      - ./data/redis.conf:/usr/local/etc/redis/redis.conf
    environment:
      - REDIS_PORT=6379
      - REDIS_DATABASES=0
      - REDIS_PASSWORD=

  redis-insight:
    container_name: redis-insight
    image: redislabs/redisinsight:1.14.0
    restart: always
    ports:
      - "8001:8001"
    depends_on:
      - redis

  postgres:
    container_name: postgres
    image: postgres:latest
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=123456a@
    ports:
      - "5432:5432"
    volumes:
      - ./data/postgres:/var/lib/postgresql/data

  mongodb:
    container_name: mongodb
    image: mongo:latest
    restart: always
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=123456a@
    ports:
      - "27017:27017"
    volumes:
      - ./data/mongodb:/data/db
    healthcheck:
      test: [ "CMD", "mongosh", "--eval", "db.adminCommand('ping')" ]
      interval: 10s
      timeout: 5s
      retries: 3

  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.2
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    healthcheck:
      test: echo stat | nc localhost 2181
      interval: 10s
      timeout: 10s
      retries: 3
    environment:
      - ZOOKEEPER_SERVER_ID=1
      - ZOOKEEPER_CLIENT_PORT=2181
      - ZOOKEEPER_TICK_TIME=2000
      - ZOOKEEPER_INIT_LIMIT=3
      - ZOOKEEPER_SYNC_LIMIT=2
      - ZOOKEEPER_SERVERS=zookeeper:2888:3888

  kafka1:
    container_name: kafka1
    image: confluentinc/cp-kafka:7.3.2
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "29091"]
      interval: 10s
      timeout: 10s
      retries: 3
    depends_on:
      - zookeeper
    ports:
      - "9091:9091"
    environment:
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka1:29091,PLAINTEXT_HOST://localhost:9091
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_BROKER_ID=1
    volumes:
      - ./data/kafka1:/var/lib/kafka/data

  kafka2:
    container_name: kafka2
    image: confluentinc/cp-kafka:7.3.2
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "29092"]
      interval: 10s
      timeout: 10s
      retries: 3
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka2:29092,PLAINTEXT_HOST://localhost:9092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_BROKER_ID=2
    volumes:
      - ./data/kafka2:/var/lib/kafka/data

  kafka3:
    container_name: kafka3
    image: confluentinc/cp-kafka:7.3.2
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "29093"]
      interval: 10s
      timeout: 10s
      retries: 3
    depends_on:
      - zookeeper
    ports:
      - "9093:9093"
    environment:
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka3:29093,PLAINTEXT_HOST://localhost:9093
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_BROKER_ID=3
    volumes:
      - ./data/kafka3:/var/lib/kafka/data

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - "8080:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka1:29091,kafka2:29092,kafka3:29093

  keycloak:
    image: quay.io/keycloak/keycloak:25.0.1
    command: start-dev
    environment:
      - KC_DB=postgres
      - KC_DB_URL_HOST=postgres
      - KC_DB_USERNAME=postgres
      - KC_DB_PASSWORD=123456a@
      - KC_HTTP_PORT=8080
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - KC_HOSTNAME=localhost
      - POSTGRES_DB=keycloak
    ports:
      - "8081:8080"
    volumes:
      - ./data/keycloak:/opt/keycloak/data
      - ./data/keycloak/providers:/opt/keycloak/providers
      - ./data/keycloak/drivers:/opt/keycloak/providers
    depends_on:
      - postgres